{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","console","log","gifs","map","img","id","title","images","downsized_large","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAChCR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCPjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEhBC,EAFgB,iDAEiCC,UAAUH,GAF3C,+DAGHI,MAAOF,GAHJ,cAGhBG,EAHgB,gBAICA,EAAKC,OAJN,uBAIdC,EAJc,EAIdA,KACRC,QAAQC,IAAIF,GACNG,EAAOH,EAAKI,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXZ,IAAG,UAAEU,EAAIG,cAAN,aAAE,EAAYC,gBAAgBd,QAVnB,kBAcfQ,GAde,4CAAH,sDCCTO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOZ,EAAW,EAAXA,IAElC,OACI,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMN,IACvB,oBAAGI,UAAU,QAAb,cAAwBJ,EAAxB,WCHCO,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GAEHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAACtB,IAEGuB,EDjB0BK,CAAc5B,GAAlCe,EAAb,EAAQR,KAAae,EAArB,EAAqBA,QAYrB,OAVAd,QAAQC,IAAIa,GAWR,qCACI,qBAAIJ,UAAU,6CAAd,4BAA4ElB,EAA5E,OAEEsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAGb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEzB7BgB,EAAe,WAExB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAOA,OACI,qCACI,oBAAIiC,UAAU,YAAd,4BACA,cAAC,EAAD,CAAajC,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWnB,KAAK,SAAAX,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCjBlC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.468568a6.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n    \n    const [inputValue, setinputValue] = useState(''); // string vacio\n\n    const handleInputChange = ( e ) => {\n        setinputValue (e.target.value);      \n    }    \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n        setCategories( cats => [inputValue, ...cats] );\n        setinputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","    \n  export const getGifs = async( category ) => {\n   \n   const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=20&api_key=Hn15UQLWUTekfQCtI7MLm89zxqzIPu5h`;\n   const resp = await fetch( url );                     \n   const { data } = await resp.json();\n   console.log(data);\n   const gifs = data.map( img => {\n       return {\n           id: img.id,\n           title: img.title,\n           url: img.images?.downsized_large.url\n       }\n   })\n   \n   return gifs;\n\n}  ","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => {\n      \n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p className=\"title\"> { title  } </p>            \n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n    \n    console.log(loading);\n\n    // useEffect( () => {\n    //     getGifs( category )\n    //         .then( setImages ); // ( imgs => setImages( imgs ) )            \n    // }, [ category ])\n \n\n    // getGifs();\n\n    return (\n        <>\n            <h3 className=\"category animate__animated animate__fadeIn\"> Resultados de { category } </h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n\n            <div className=\"card-grid\">     \n                    {\n                        images.map( img => (\n                            <GifGridItem \n                                key={ img.id } \n                                { ...img }\n                            />                         \n                        ))\n                    }\n\n            </div>\n        </>    \n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n       \n        getGifs( category )\n            .then( imgs => {\n     \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n    return state; // { data: [], loading: true };\n\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n  \n    const [categories, setCategories] = useState(['One Punch']);\n    \n    // const handleAdd = () => {\n    //     //setCategories(['HunterXHunter', ...categories]);\n    //     setCategories( cats => [...cats, 'HunterXHunter'] );\n    // }\n\n    return (\n        <>\n            <h2 className=\"titleMain\"> GifExpertApp </h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n\n            <ol>\n                { \n                    categories.map( category => (\n                        <GifGrid\n                            key={ category }\n                            category={ category }   \n                        />    \n                    ))          \n                }\n            </ol>\n        </>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}